node index.js

Node
	ServerSide JS Framework
	http module to render web pages
	webpack is like a latest version to render web pages

BoilerPlate
	Common Code
	Tools/Script
		create-react-app

npm install -g create-react-app

create-react-app internal process =>
	create-react-app projectName
	
	md projectName
	cd projectName
	npm init
	generates files like index.html.. css... index.js and app.js
	npm install react
	npm install react-dom
	npm install react-scripts

Advantages of BoilerPlate scripts
	Code Generation
	
	
npm - Modules
Commands
	add - npm install moduleName
	update - npm update moduleName
	delete - npm uninstall moduleName

1. Installing dependencies one by one
	npm install react
	npm install react-dom

2. Installing multiple dependencies with single command
	npm install react react-dom

Points to remember
1. It installs modules inside node_modules folder.
2. It installs submodules required for that module.
3. In each module, there should be package.json.
4. We will never checkin node_modules folder. So when we download a project from source control, we must run command npm install to install all dependencies.
5. Module can be added using npm install moduleName or add module manually to dependencies object of package.json and run npm install command.
6. save is attribute to be used to insert module into dependencies section of package.json
	npm install react --save
7. save-dev is attribute to be used to insert module into devDependencies section of package.json. These modules I need in development stage only.
	npm install babel --save-dev

	
Installing without BoilerPlate
https://reactjs.org/docs/add-react-to-an-existing-app.html#installing-react


Installing BoilerPlate => create-react-app
https://reactjs.org/docs/add-react-to-a-new-app.html


Creating a Project
Node > 5.8
npx create-react-app projectName
Else 
create-react-app projectName

Running a Project
cd projectName
npm start

Project - Web
	React
	React Dom
	Index.html

Project - Node
	npm init
	npm install React
	npm install React-Dom
	index.html
	

Project Structure
node_modules => Modules get installed into this folder
package.json
	Scripts
		start => Start of the project using WebPack
		build => to generate bundle which can be deployed directly
		test => running Tests
		eject => it will come out of create-react-app
registerServiceWorker.js
	Caches Images and CSS in browser so that when there is no or less internet, it will load these files from cache for faster access of pages.
	
	
Starting Point
public/index.html
src/index.js

Actual Starting Point 
src/App.js

ES5
var React = require('react');

ES6
import React from 'react';


https://reactjs.org/docs/add-react-to-an-existing-app.html

Project Structure
	src
		containers => screens/pages
		images => assets
		util => Code related to utilities like formatting, convertStringtoNumber
	

html
<div class="container" style="background-color:#f1f1f1">

jsx
 <div class="container" style={{ "background-color":"#f1f1f1"}} >

html
<img src="img_avatar2.png" alt="Avatar" class="avatar" />

jsx
import avatar from './img_avatar2.png'
<img src={avatar} alt="Avatar" class="avatar" />

html
<button type="submit">Login</button>


<Test username="Arjun" />

class Test {
    render() {
        var user = this.props.username;
    }
}

Based on below code "/test1" is matching 2 routes. So It will load Page1 and Page2
<div>
        <Route path="/test1" component={Page1} />
        <Route path="/test1" component={Page2} />
        <Route path="/test2" component={Page2} />
</div>

If we use, it will load first matching ones ... ie Page1 only.
<Switch>
        <Route path="/test1" component={Page1} />
        <Route path="/test1" component={Page2} />
        <Route path="/test2" component={Page2} />
</Switch>


/user
/user/1 - 1 is url param
/user/2 - 2 is url param
/user/contact - contact is sublink

React Routing 4 version considers sublink as a url param only.

URL => "/test1/subTest1"

route => "/test1/subTest1"
route => "/test1"

Note: When there are nested routes, its preferable to add exact key word for parent route 
so that it will not match for nested route.


